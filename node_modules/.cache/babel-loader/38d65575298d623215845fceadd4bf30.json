{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desenvolvimento\\\\# Repositorios Git Hub\\\\Para Commitar\\\\restaurante-ifome\\\\src\\\\pages\\\\AllCharts\\\\chartist\\\\linechart.js\";\nimport React, { Component } from \"react\";\nimport ChartistGraph from \"react-chartist\";\nimport api from \"../../../services/api\";\nvar storageLogado = localStorage.getItem('usuarioLogado');\n\nclass linechart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      vendasMes1: [],\n      vendasMes2: [],\n      vendasMes3: [],\n      vendasMes4: [],\n      vendasMes5: [],\n      vendasMes6: [],\n      vendasMes7: [],\n      vendasMes8: [],\n      vendasMes9: [],\n      vendasMes10: [],\n      vendasMes11: [],\n      vendasMes12: []\n    };\n  }\n\n  async componentDidMount() {\n    const responseMes1 = await api.get(`/api/get/mesAmes1/${storageLogado}`);\n    this.setState({\n      vendasMes1: responseMes1.data\n    });\n    const responseMes2 = await api.get(`/api/get/mesAmes2/${storageLogado}`);\n    this.setState({\n      vendasMes2: responseMes2.data\n    });\n    const responseMes3 = await api.get(`/api/get/mesAmes3/${storageLogado}`);\n    this.setState({\n      vendasMes3: responseMes3.data\n    });\n    const responseMes4 = await api.get(`/api/get/mesAmes4/${storageLogado}`);\n    this.setState({\n      vendasMes4: responseMes4.data\n    });\n    const responseMes5 = await api.get(`/api/get/mesAmes5/${storageLogado}`);\n    this.setState({\n      vendasMes5: responseMes5.data\n    });\n    const responseMes6 = await api.get(`/api/get/mesAmes6/${storageLogado}`);\n    this.setState({\n      vendasMes6: responseMes6.data\n    });\n    const responseMes7 = await api.get(`/api/get/mesAmes7/${storageLogado}`);\n    this.setState({\n      vendasMes7: responseMes7.data\n    });\n    const responseMes8 = await api.get(`/api/get/mesAmes8/${storageLogado}`);\n    this.setState({\n      vendasMes8: responseMes8.data\n    });\n    const responseMes9 = await api.get(`/api/get/mesAmes9/${storageLogado}`);\n    this.setState({\n      vendasMes9: responseMes9.data\n    });\n    const responseMes10 = await api.get(`/api/get/mesAmes10/${storageLogado}`);\n    this.setState({\n      vendasMes10: responseMes10.data\n    });\n    const responseMes11 = await api.get(`/api/get/mesAmes11/${storageLogado}`);\n    this.setState({\n      vendasMes11: responseMes11.data\n    });\n    const responseMes12 = await api.get(`/api/get/mesAmes12/${storageLogado}`);\n    this.setState({\n      vendasMes12: responseMes12.data\n    });\n  }\n\n  render() {\n    const {\n      vendasMes1\n    } = this.state;\n    const valorPedidosMes1 = vendasMes1.map(count => count.valor);\n    const totalMes1 = valorPedidosMes1.reduce(function (total, numero) {\n      return total + numero;\n    }, 0);\n    const faturamentoMes1 = totalMes1;\n    const {\n      vendasMes2\n    } = this.state;\n    const valorPedidosMes2 = vendasMes2.map(count => count.valor);\n    const totalMes2 = valorPedidosMes2.reduce(function (total, numero) {\n      return total + numero;\n    }, 0);\n    const faturamentoMes2 = totalMes2;\n    const {\n      vendasMes3\n    } = this.state;\n    const valorPedidosMes3 = vendasMes3.map(count => count.valor);\n    const totalMes3 = valorPedidosMes3.reduce(function (total, numero) {\n      return total + numero;\n    }, 0);\n    const faturamentoMes3 = totalMes3;\n    const {\n      vendasMes4\n    } = this.state;\n    const valorPedidosMes4 = vendasMes4.map(count => count.valor);\n    const totalMes4 = valorPedidosMes4.reduce(function (total, numero) {\n      return total + numero;\n    }, 0);\n    const faturamentoMes4 = totalMes4;\n    const {\n      vendasMes5\n    } = this.state;\n    const valorPedidosMes5 = vendasMes5.map(count => count.valor);\n    const totalMes5 = valorPedidosMes5.reduce(function (total, numero) {\n      return total + numero;\n    }, 0);\n    const faturamentoMes5 = totalMes5;\n    const {\n      vendasMes6\n    } = this.state;\n    const valorPedidosMes6 = vendasMes6.map(count => count.valor);\n    const totalMes6 = valorPedidosMes6.reduce(function (total, numero) {\n      return total + numero;\n    }, 0);\n    const faturamentoMes6 = totalMes6;\n    const {\n      vendasMes7\n    } = this.state;\n    const valorPedidosMes7 = vendasMes7.map(count => count.valor);\n    const totalMes7 = valorPedidosMes7.reduce(function (total, numero) {\n      return total + numero;\n    }, 0);\n    const faturamentoMes7 = totalMes7;\n    const {\n      vendasMes8\n    } = this.state;\n    const valorPedidosMes8 = vendasMes8.map(count => count.valor);\n    const totalMes8 = valorPedidosMes8.reduce(function (total, numero) {\n      return total + numero;\n    }, 0);\n    const faturamentoMes8 = totalMes8;\n    const {\n      vendasMes9\n    } = this.state;\n    const valorPedidosMes9 = vendasMes9.map(count => count.valor);\n    const totalMes9 = valorPedidosMes9.reduce(function (total, numero) {\n      return total + numero;\n    }, 0);\n    const faturamentoMes9 = totalMes9;\n    const {\n      vendasMes10\n    } = this.state;\n    const valorPedidosMes10 = vendasMes10.map(count => count.valor);\n    const totalMes10 = valorPedidosMes10.reduce(function (total, numero) {\n      return total + numero;\n    }, 0);\n    const faturamentoMes10 = totalMes10;\n    const {\n      vendasMes11\n    } = this.state;\n    const valorPedidosMes11 = vendasMes11.map(count => count.valor);\n    const totalMes11 = valorPedidosMes11.reduce(function (total, numero) {\n      return total + numero;\n    }, 0);\n    const faturamentoMes11 = totalMes11;\n    const {\n      vendasMes12\n    } = this.state;\n    const valorPedidosMes12 = vendasMes12.map(count => count.valor);\n    const totalMes12 = valorPedidosMes12.reduce(function (total, numero) {\n      return total + numero;\n    }, 0);\n    const faturamentoMes12 = totalMes12;\n    var lineChartData = {\n      labels: [\"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\", \"Jul\", \"Ago\", \"Set\", \"Out\", \"Nov\", \"Dez\"],\n      series: [[faturamentoMes1, faturamentoMes2, faturamentoMes3, faturamentoMes4, faturamentoMes5, faturamentoMes6, faturamentoMes7, faturamentoMes8, faturamentoMes9, faturamentoMes10, faturamentoMes11, faturamentoMes12]]\n    };\n    var lineChartOptions = {\n      fullWidth: true,\n      chartPadding: {\n        right: 40\n      }\n    };\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ChartistGraph, {\n      data: lineChartData,\n      options: lineChartOptions,\n      type: \"Line\",\n      style: {\n        height: \"300px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default linechart;","map":{"version":3,"sources":["D:/Desenvolvimento/# Repositorios Git Hub/Para Commitar/restaurante-ifome/src/pages/AllCharts/chartist/linechart.js"],"names":["React","Component","ChartistGraph","api","storageLogado","localStorage","getItem","linechart","state","vendasMes1","vendasMes2","vendasMes3","vendasMes4","vendasMes5","vendasMes6","vendasMes7","vendasMes8","vendasMes9","vendasMes10","vendasMes11","vendasMes12","componentDidMount","responseMes1","get","setState","data","responseMes2","responseMes3","responseMes4","responseMes5","responseMes6","responseMes7","responseMes8","responseMes9","responseMes10","responseMes11","responseMes12","render","valorPedidosMes1","map","count","valor","totalMes1","reduce","total","numero","faturamentoMes1","valorPedidosMes2","totalMes2","faturamentoMes2","valorPedidosMes3","totalMes3","faturamentoMes3","valorPedidosMes4","totalMes4","faturamentoMes4","valorPedidosMes5","totalMes5","faturamentoMes5","valorPedidosMes6","totalMes6","faturamentoMes6","valorPedidosMes7","totalMes7","faturamentoMes7","valorPedidosMes8","totalMes8","faturamentoMes8","valorPedidosMes9","totalMes9","faturamentoMes9","valorPedidosMes10","totalMes10","faturamentoMes10","valorPedidosMes11","totalMes11","faturamentoMes11","valorPedidosMes12","totalMes12","faturamentoMes12","lineChartData","labels","series","lineChartOptions","fullWidth","chartPadding","right","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AAGA,IAAIC,aAAa,GAAGC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAApB;;AAEA,MAAMC,SAAN,SAAwBN,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCO,KADgC,GACxB;AACNC,MAAAA,UAAU,EAAE,EADN;AAENC,MAAAA,UAAU,EAAE,EAFN;AAGNC,MAAAA,UAAU,EAAE,EAHN;AAINC,MAAAA,UAAU,EAAE,EAJN;AAKNC,MAAAA,UAAU,EAAE,EALN;AAMNC,MAAAA,UAAU,EAAE,EANN;AAONC,MAAAA,UAAU,EAAE,EAPN;AAQNC,MAAAA,UAAU,EAAE,EARN;AASNC,MAAAA,UAAU,EAAE,EATN;AAUNC,MAAAA,WAAW,EAAE,EAVP;AAWNC,MAAAA,WAAW,EAAE,EAXP;AAYNC,MAAAA,WAAW,EAAE;AAZP,KADwB;AAAA;;AAgBhC,QAAMC,iBAAN,GAA0B;AACxB,UAAMC,YAAY,GAAG,MAAMnB,GAAG,CAACoB,GAAJ,CAAS,qBAAoBnB,aAAc,EAA3C,CAA3B;AACA,SAAKoB,QAAL,CAAc;AAAEf,MAAAA,UAAU,EAAEa,YAAY,CAACG;AAA3B,KAAd;AACA,UAAMC,YAAY,GAAG,MAAMvB,GAAG,CAACoB,GAAJ,CAAS,qBAAoBnB,aAAc,EAA3C,CAA3B;AACA,SAAKoB,QAAL,CAAc;AAAEd,MAAAA,UAAU,EAAEgB,YAAY,CAACD;AAA3B,KAAd;AACA,UAAME,YAAY,GAAG,MAAMxB,GAAG,CAACoB,GAAJ,CAAS,qBAAoBnB,aAAc,EAA3C,CAA3B;AACA,SAAKoB,QAAL,CAAc;AAAEb,MAAAA,UAAU,EAAEgB,YAAY,CAACF;AAA3B,KAAd;AACA,UAAMG,YAAY,GAAG,MAAMzB,GAAG,CAACoB,GAAJ,CAAS,qBAAoBnB,aAAc,EAA3C,CAA3B;AACA,SAAKoB,QAAL,CAAc;AAAEZ,MAAAA,UAAU,EAAEgB,YAAY,CAACH;AAA3B,KAAd;AACA,UAAMI,YAAY,GAAG,MAAM1B,GAAG,CAACoB,GAAJ,CAAS,qBAAoBnB,aAAc,EAA3C,CAA3B;AACA,SAAKoB,QAAL,CAAc;AAAEX,MAAAA,UAAU,EAAEgB,YAAY,CAACJ;AAA3B,KAAd;AACA,UAAMK,YAAY,GAAG,MAAM3B,GAAG,CAACoB,GAAJ,CAAS,qBAAoBnB,aAAc,EAA3C,CAA3B;AACA,SAAKoB,QAAL,CAAc;AAAEV,MAAAA,UAAU,EAAEgB,YAAY,CAACL;AAA3B,KAAd;AACA,UAAMM,YAAY,GAAG,MAAM5B,GAAG,CAACoB,GAAJ,CAAS,qBAAoBnB,aAAc,EAA3C,CAA3B;AACA,SAAKoB,QAAL,CAAc;AAAET,MAAAA,UAAU,EAAEgB,YAAY,CAACN;AAA3B,KAAd;AACA,UAAMO,YAAY,GAAG,MAAM7B,GAAG,CAACoB,GAAJ,CAAS,qBAAoBnB,aAAc,EAA3C,CAA3B;AACA,SAAKoB,QAAL,CAAc;AAAER,MAAAA,UAAU,EAAEgB,YAAY,CAACP;AAA3B,KAAd;AACA,UAAMQ,YAAY,GAAG,MAAM9B,GAAG,CAACoB,GAAJ,CAAS,qBAAoBnB,aAAc,EAA3C,CAA3B;AACA,SAAKoB,QAAL,CAAc;AAAEP,MAAAA,UAAU,EAAEgB,YAAY,CAACR;AAA3B,KAAd;AACA,UAAMS,aAAa,GAAG,MAAM/B,GAAG,CAACoB,GAAJ,CAAS,sBAAqBnB,aAAc,EAA5C,CAA5B;AACA,SAAKoB,QAAL,CAAc;AAAEN,MAAAA,WAAW,EAAEgB,aAAa,CAACT;AAA7B,KAAd;AACA,UAAMU,aAAa,GAAG,MAAMhC,GAAG,CAACoB,GAAJ,CAAS,sBAAqBnB,aAAc,EAA5C,CAA5B;AACA,SAAKoB,QAAL,CAAc;AAAEL,MAAAA,WAAW,EAAEgB,aAAa,CAACV;AAA7B,KAAd;AACA,UAAMW,aAAa,GAAG,MAAMjC,GAAG,CAACoB,GAAJ,CAAS,sBAAqBnB,aAAc,EAA5C,CAA5B;AACA,SAAKoB,QAAL,CAAc;AAAEJ,MAAAA,WAAW,EAAEgB,aAAa,CAACX;AAA7B,KAAd;AACD;;AACDY,EAAAA,MAAM,GAAG;AACP,UAAM;AAAE5B,MAAAA;AAAF,QAAiB,KAAKD,KAA5B;AACA,UAAM8B,gBAAgB,GAAG7B,UAAU,CAAC8B,GAAX,CAAeC,KAAK,IAAKA,KAAK,CAACC,KAA/B,CAAzB;AAEA,UAAMC,SAAS,GAAGJ,gBAAgB,CAACK,MAAjB,CAAwB,UAAUC,KAAV,EAAiBC,MAAjB,EAAyB;AAC/D,aAAOD,KAAK,GAAGC,MAAf;AACH,KAFiB,EAEf,CAFe,CAAlB;AAIA,UAAMC,eAAe,GAAGJ,SAAxB;AAEA,UAAM;AAAEhC,MAAAA;AAAF,QAAiB,KAAKF,KAA5B;AACA,UAAMuC,gBAAgB,GAAGrC,UAAU,CAAC6B,GAAX,CAAeC,KAAK,IAAKA,KAAK,CAACC,KAA/B,CAAzB;AAEA,UAAMO,SAAS,GAAGD,gBAAgB,CAACJ,MAAjB,CAAwB,UAAUC,KAAV,EAAiBC,MAAjB,EAAyB;AAC/D,aAAOD,KAAK,GAAGC,MAAf;AACH,KAFiB,EAEf,CAFe,CAAlB;AAIA,UAAMI,eAAe,GAAGD,SAAxB;AACA,UAAM;AAAErC,MAAAA;AAAF,QAAiB,KAAKH,KAA5B;AACA,UAAM0C,gBAAgB,GAAGvC,UAAU,CAAC4B,GAAX,CAAeC,KAAK,IAAKA,KAAK,CAACC,KAA/B,CAAzB;AAEA,UAAMU,SAAS,GAAGD,gBAAgB,CAACP,MAAjB,CAAwB,UAAUC,KAAV,EAAiBC,MAAjB,EAAyB;AAC/D,aAAOD,KAAK,GAAGC,MAAf;AACH,KAFiB,EAEf,CAFe,CAAlB;AAIA,UAAMO,eAAe,GAAGD,SAAxB;AACA,UAAM;AAAEvC,MAAAA;AAAF,QAAiB,KAAKJ,KAA5B;AACA,UAAM6C,gBAAgB,GAAGzC,UAAU,CAAC2B,GAAX,CAAeC,KAAK,IAAKA,KAAK,CAACC,KAA/B,CAAzB;AAEA,UAAMa,SAAS,GAAGD,gBAAgB,CAACV,MAAjB,CAAwB,UAAUC,KAAV,EAAiBC,MAAjB,EAAyB;AAC/D,aAAOD,KAAK,GAAGC,MAAf;AACH,KAFiB,EAEf,CAFe,CAAlB;AAIA,UAAMU,eAAe,GAAGD,SAAxB;AACA,UAAM;AAAEzC,MAAAA;AAAF,QAAiB,KAAKL,KAA5B;AACA,UAAMgD,gBAAgB,GAAG3C,UAAU,CAAC0B,GAAX,CAAeC,KAAK,IAAKA,KAAK,CAACC,KAA/B,CAAzB;AAEA,UAAMgB,SAAS,GAAGD,gBAAgB,CAACb,MAAjB,CAAwB,UAAUC,KAAV,EAAiBC,MAAjB,EAAyB;AAC/D,aAAOD,KAAK,GAAGC,MAAf;AACH,KAFiB,EAEf,CAFe,CAAlB;AAIA,UAAMa,eAAe,GAAGD,SAAxB;AACA,UAAM;AAAE3C,MAAAA;AAAF,QAAiB,KAAKN,KAA5B;AACA,UAAMmD,gBAAgB,GAAG7C,UAAU,CAACyB,GAAX,CAAeC,KAAK,IAAKA,KAAK,CAACC,KAA/B,CAAzB;AAEA,UAAMmB,SAAS,GAAGD,gBAAgB,CAAChB,MAAjB,CAAwB,UAAUC,KAAV,EAAiBC,MAAjB,EAAyB;AAC/D,aAAOD,KAAK,GAAGC,MAAf;AACH,KAFiB,EAEf,CAFe,CAAlB;AAIA,UAAMgB,eAAe,GAAGD,SAAxB;AACA,UAAM;AAAE7C,MAAAA;AAAF,QAAiB,KAAKP,KAA5B;AACA,UAAMsD,gBAAgB,GAAG/C,UAAU,CAACwB,GAAX,CAAeC,KAAK,IAAKA,KAAK,CAACC,KAA/B,CAAzB;AAEA,UAAMsB,SAAS,GAAGD,gBAAgB,CAACnB,MAAjB,CAAwB,UAAUC,KAAV,EAAiBC,MAAjB,EAAyB;AAC/D,aAAOD,KAAK,GAAGC,MAAf;AACH,KAFiB,EAEf,CAFe,CAAlB;AAIA,UAAMmB,eAAe,GAAGD,SAAxB;AACA,UAAM;AAAE/C,MAAAA;AAAF,QAAiB,KAAKR,KAA5B;AACA,UAAMyD,gBAAgB,GAAGjD,UAAU,CAACuB,GAAX,CAAeC,KAAK,IAAKA,KAAK,CAACC,KAA/B,CAAzB;AAEA,UAAMyB,SAAS,GAAGD,gBAAgB,CAACtB,MAAjB,CAAwB,UAAUC,KAAV,EAAiBC,MAAjB,EAAyB;AAC/D,aAAOD,KAAK,GAAGC,MAAf;AACH,KAFiB,EAEf,CAFe,CAAlB;AAIA,UAAMsB,eAAe,GAAGD,SAAxB;AACA,UAAM;AAAEjD,MAAAA;AAAF,QAAiB,KAAKT,KAA5B;AACA,UAAM4D,gBAAgB,GAAGnD,UAAU,CAACsB,GAAX,CAAeC,KAAK,IAAKA,KAAK,CAACC,KAA/B,CAAzB;AAEA,UAAM4B,SAAS,GAAGD,gBAAgB,CAACzB,MAAjB,CAAwB,UAAUC,KAAV,EAAiBC,MAAjB,EAAyB;AAC/D,aAAOD,KAAK,GAAGC,MAAf;AACH,KAFiB,EAEf,CAFe,CAAlB;AAIA,UAAMyB,eAAe,GAAGD,SAAxB;AACA,UAAM;AAAEnD,MAAAA;AAAF,QAAkB,KAAKV,KAA7B;AACA,UAAM+D,iBAAiB,GAAGrD,WAAW,CAACqB,GAAZ,CAAgBC,KAAK,IAAKA,KAAK,CAACC,KAAhC,CAA1B;AAEA,UAAM+B,UAAU,GAAGD,iBAAiB,CAAC5B,MAAlB,CAAyB,UAAUC,KAAV,EAAiBC,MAAjB,EAAyB;AACjE,aAAOD,KAAK,GAAGC,MAAf;AACH,KAFkB,EAEhB,CAFgB,CAAnB;AAIA,UAAM4B,gBAAgB,GAAGD,UAAzB;AACA,UAAM;AAAErD,MAAAA;AAAF,QAAkB,KAAKX,KAA7B;AACA,UAAMkE,iBAAiB,GAAGvD,WAAW,CAACoB,GAAZ,CAAgBC,KAAK,IAAKA,KAAK,CAACC,KAAhC,CAA1B;AAEA,UAAMkC,UAAU,GAAGD,iBAAiB,CAAC/B,MAAlB,CAAyB,UAAUC,KAAV,EAAiBC,MAAjB,EAAyB;AACjE,aAAOD,KAAK,GAAGC,MAAf;AACH,KAFkB,EAEhB,CAFgB,CAAnB;AAIA,UAAM+B,gBAAgB,GAAGD,UAAzB;AACA,UAAM;AAAEvD,MAAAA;AAAF,QAAkB,KAAKZ,KAA7B;AACA,UAAMqE,iBAAiB,GAAGzD,WAAW,CAACmB,GAAZ,CAAgBC,KAAK,IAAKA,KAAK,CAACC,KAAhC,CAA1B;AAEA,UAAMqC,UAAU,GAAGD,iBAAiB,CAAClC,MAAlB,CAAyB,UAAUC,KAAV,EAAiBC,MAAjB,EAAyB;AACjE,aAAOD,KAAK,GAAGC,MAAf;AACH,KAFkB,EAEhB,CAFgB,CAAnB;AAIA,UAAMkC,gBAAgB,GAAGD,UAAzB;AACA,QAAIE,aAAa,GAAG;AAClBC,MAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD,EAAgE,KAAhE,EAAuE,KAAvE,EAA8E,KAA9E,CADU;AAElBC,MAAAA,MAAM,EAAE,CACN,CAACpC,eAAD,EAAkBG,eAAlB,EAAmCG,eAAnC,EAAoDG,eAApD,EAAqEG,eAArE,EAAqFG,eAArF,EAAqGG,eAArG,EAAsHG,eAAtH,EAAuIG,eAAvI,EAAwJG,gBAAxJ,EAAyKG,gBAAzK,EAA0LG,gBAA1L,CADM;AAFU,KAApB;AAMA,QAAII,gBAAgB,GAAG;AACrBC,MAAAA,SAAS,EAAE,IADU;AAErBC,MAAAA,YAAY,EAAE;AACZC,QAAAA,KAAK,EAAE;AADK;AAFO,KAAvB;AAMA,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,aAAD;AACE,MAAA,IAAI,EAAEN,aADR;AAEE,MAAA,OAAO,EAAEG,gBAFX;AAGE,MAAA,IAAI,EAAE,MAHR;AAIE,MAAA,KAAK,EAAE;AAAEI,QAAAA,MAAM,EAAE;AAAV,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAUD;;AAlK+B;;AAqKlC,eAAehF,SAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport ChartistGraph from \"react-chartist\";\r\nimport api from \"../../../services/api\";\r\n\r\n\r\nvar storageLogado = localStorage.getItem('usuarioLogado')\r\n\r\nclass linechart extends Component {\r\n  state = {\r\n    vendasMes1: [],\r\n    vendasMes2: [],\r\n    vendasMes3: [],\r\n    vendasMes4: [],\r\n    vendasMes5: [],\r\n    vendasMes6: [],\r\n    vendasMes7: [],\r\n    vendasMes8: [],\r\n    vendasMes9: [],\r\n    vendasMes10: [],\r\n    vendasMes11: [],\r\n    vendasMes12: [],\r\n  \r\n  }\r\n  async componentDidMount() {\r\n    const responseMes1 = await api.get(`/api/get/mesAmes1/${storageLogado}`)\r\n    this.setState({ vendasMes1: responseMes1.data })\r\n    const responseMes2 = await api.get(`/api/get/mesAmes2/${storageLogado}`)\r\n    this.setState({ vendasMes2: responseMes2.data })\r\n    const responseMes3 = await api.get(`/api/get/mesAmes3/${storageLogado}`)\r\n    this.setState({ vendasMes3: responseMes3.data })\r\n    const responseMes4 = await api.get(`/api/get/mesAmes4/${storageLogado}`)\r\n    this.setState({ vendasMes4: responseMes4.data })\r\n    const responseMes5 = await api.get(`/api/get/mesAmes5/${storageLogado}`)\r\n    this.setState({ vendasMes5: responseMes5.data })\r\n    const responseMes6 = await api.get(`/api/get/mesAmes6/${storageLogado}`)\r\n    this.setState({ vendasMes6: responseMes6.data })\r\n    const responseMes7 = await api.get(`/api/get/mesAmes7/${storageLogado}`)\r\n    this.setState({ vendasMes7: responseMes7.data })\r\n    const responseMes8 = await api.get(`/api/get/mesAmes8/${storageLogado}`)\r\n    this.setState({ vendasMes8: responseMes8.data })\r\n    const responseMes9 = await api.get(`/api/get/mesAmes9/${storageLogado}`)\r\n    this.setState({ vendasMes9: responseMes9.data })\r\n    const responseMes10 = await api.get(`/api/get/mesAmes10/${storageLogado}`)\r\n    this.setState({ vendasMes10: responseMes10.data })\r\n    const responseMes11 = await api.get(`/api/get/mesAmes11/${storageLogado}`)\r\n    this.setState({ vendasMes11: responseMes11.data })\r\n    const responseMes12 = await api.get(`/api/get/mesAmes12/${storageLogado}`)\r\n    this.setState({ vendasMes12: responseMes12.data })\r\n  }\r\n  render() {\r\n    const { vendasMes1 } = this.state;\r\n    const valorPedidosMes1 = vendasMes1.map(count => (count.valor))\r\n\r\n    const totalMes1 = valorPedidosMes1.reduce(function (total, numero) {\r\n        return total + numero;\r\n    }, 0);\r\n\r\n    const faturamentoMes1 = totalMes1\r\n\r\n    const { vendasMes2 } = this.state;\r\n    const valorPedidosMes2 = vendasMes2.map(count => (count.valor))\r\n\r\n    const totalMes2 = valorPedidosMes2.reduce(function (total, numero) {\r\n        return total + numero;\r\n    }, 0);\r\n\r\n    const faturamentoMes2 = totalMes2\r\n    const { vendasMes3 } = this.state;\r\n    const valorPedidosMes3 = vendasMes3.map(count => (count.valor))\r\n\r\n    const totalMes3 = valorPedidosMes3.reduce(function (total, numero) {\r\n        return total + numero;\r\n    }, 0);\r\n\r\n    const faturamentoMes3 = totalMes3\r\n    const { vendasMes4 } = this.state;\r\n    const valorPedidosMes4 = vendasMes4.map(count => (count.valor))\r\n\r\n    const totalMes4 = valorPedidosMes4.reduce(function (total, numero) {\r\n        return total + numero;\r\n    }, 0);\r\n\r\n    const faturamentoMes4 = totalMes4\r\n    const { vendasMes5 } = this.state;\r\n    const valorPedidosMes5 = vendasMes5.map(count => (count.valor))\r\n\r\n    const totalMes5 = valorPedidosMes5.reduce(function (total, numero) {\r\n        return total + numero;\r\n    }, 0);\r\n\r\n    const faturamentoMes5 = totalMes5\r\n    const { vendasMes6 } = this.state;\r\n    const valorPedidosMes6 = vendasMes6.map(count => (count.valor))\r\n\r\n    const totalMes6 = valorPedidosMes6.reduce(function (total, numero) {\r\n        return total + numero;\r\n    }, 0);\r\n\r\n    const faturamentoMes6 = totalMes6\r\n    const { vendasMes7 } = this.state;\r\n    const valorPedidosMes7 = vendasMes7.map(count => (count.valor))\r\n\r\n    const totalMes7 = valorPedidosMes7.reduce(function (total, numero) {\r\n        return total + numero;\r\n    }, 0);\r\n\r\n    const faturamentoMes7 = totalMes7\r\n    const { vendasMes8 } = this.state;\r\n    const valorPedidosMes8 = vendasMes8.map(count => (count.valor))\r\n\r\n    const totalMes8 = valorPedidosMes8.reduce(function (total, numero) {\r\n        return total + numero;\r\n    }, 0);\r\n\r\n    const faturamentoMes8 = totalMes8\r\n    const { vendasMes9 } = this.state;\r\n    const valorPedidosMes9 = vendasMes9.map(count => (count.valor))\r\n\r\n    const totalMes9 = valorPedidosMes9.reduce(function (total, numero) {\r\n        return total + numero;\r\n    }, 0);\r\n\r\n    const faturamentoMes9 = totalMes9\r\n    const { vendasMes10 } = this.state;\r\n    const valorPedidosMes10 = vendasMes10.map(count => (count.valor))\r\n\r\n    const totalMes10 = valorPedidosMes10.reduce(function (total, numero) {\r\n        return total + numero;\r\n    }, 0);\r\n\r\n    const faturamentoMes10 = totalMes10\r\n    const { vendasMes11 } = this.state;\r\n    const valorPedidosMes11 = vendasMes11.map(count => (count.valor))\r\n\r\n    const totalMes11 = valorPedidosMes11.reduce(function (total, numero) {\r\n        return total + numero;\r\n    }, 0);\r\n\r\n    const faturamentoMes11 = totalMes11\r\n    const { vendasMes12 } = this.state;\r\n    const valorPedidosMes12 = vendasMes12.map(count => (count.valor))\r\n\r\n    const totalMes12 = valorPedidosMes12.reduce(function (total, numero) {\r\n        return total + numero;\r\n    }, 0);\r\n\r\n    const faturamentoMes12 = totalMes12\r\n    var lineChartData = {\r\n      labels: [\"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\", \"Jul\", \"Ago\", \"Set\", \"Out\", \"Nov\", \"Dez\"],\r\n      series: [\r\n        [faturamentoMes1, faturamentoMes2, faturamentoMes3, faturamentoMes4, faturamentoMes5,faturamentoMes6,faturamentoMes7, faturamentoMes8, faturamentoMes9, faturamentoMes10,faturamentoMes11,faturamentoMes12]\r\n      ]\r\n    };\r\n    var lineChartOptions = {\r\n      fullWidth: true,\r\n      chartPadding: {\r\n        right: 40\r\n      }\r\n    };\r\n    return (\r\n      <React.Fragment>\r\n        <ChartistGraph\r\n          data={lineChartData}\r\n          options={lineChartOptions}\r\n          type={\"Line\"}\r\n          style={{ height: \"300px\" }}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default linechart;\r\n"]},"metadata":{},"sourceType":"module"}