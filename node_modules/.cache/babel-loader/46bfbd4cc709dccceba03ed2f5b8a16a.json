{"ast":null,"code":"import { REGISTER_USER, REGISTER_USER_SUCCESSFUL, REGISTER_USER_FAILED } from './actionTypes';\nconst initialState = {\n  registrationError: null,\n  message: null,\n  loading: false\n};\n\nconst account = (state = initialState, action) => {\n  switch (action.type) {\n    case REGISTER_USER:\n      state = { ...state,\n        user: null,\n        loading: true,\n        registrationError: null\n      };\n      break;\n\n    case REGISTER_USER_SUCCESSFUL:\n      state = { ...state,\n        loading: false,\n        user: action.payload,\n        registrationError: null\n      };\n      break;\n\n    case REGISTER_USER_FAILED:\n      state = { ...state,\n        user: null,\n        loading: false,\n        registrationError: action.payload\n      };\n      break;\n\n    default:\n      state = { ...state\n      };\n      break;\n  }\n\n  return state;\n};\n\nexport default account;","map":{"version":3,"sources":["D:/Desenvolvimento/# Repositorios Git Hub/Para Commitar/restaurante-ifome/src/store/auth/register/reducer.js"],"names":["REGISTER_USER","REGISTER_USER_SUCCESSFUL","REGISTER_USER_FAILED","initialState","registrationError","message","loading","account","state","action","type","user","payload"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,wBAAxB,EAAkDC,oBAAlD,QAA8E,eAA9E;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,iBAAiB,EAAE,IADF;AACQC,EAAAA,OAAO,EAAE,IADjB;AACuBC,EAAAA,OAAO,EAAE;AADhC,CAArB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,aAAL;AACIQ,MAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJG,QAAAA,IAAI,EAAE,IAFF;AAGJL,QAAAA,OAAO,EAAE,IAHL;AAIJF,QAAAA,iBAAiB,EAAE;AAJf,OAAR;AAMA;;AACJ,SAAKH,wBAAL;AACIO,MAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJF,QAAAA,OAAO,EAAE,KAFL;AAGJK,QAAAA,IAAI,EAAEF,MAAM,CAACG,OAHT;AAIJR,QAAAA,iBAAiB,EAAE;AAJf,OAAR;AAMA;;AACJ,SAAKF,oBAAL;AACIM,MAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJG,QAAAA,IAAI,EAAE,IAFF;AAGJL,QAAAA,OAAO,EAAE,KAHL;AAIJF,QAAAA,iBAAiB,EAAEK,MAAM,CAACG;AAJtB,OAAR;AAMA;;AACJ;AACIJ,MAAAA,KAAK,GAAG,EAAE,GAAGA;AAAL,OAAR;AACA;AA3BR;;AA6BA,SAAOA,KAAP;AACH,CA/BD;;AAiCA,eAAeD,OAAf","sourcesContent":["import { REGISTER_USER, REGISTER_USER_SUCCESSFUL, REGISTER_USER_FAILED } from './actionTypes';\r\n\r\nconst initialState = {\r\n    registrationError: null, message: null, loading: false\r\n}\r\n\r\nconst account = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case REGISTER_USER:\r\n            state = {\r\n                ...state,\r\n                user: null,\r\n                loading: true,\r\n                registrationError: null\r\n            }\r\n            break;\r\n        case REGISTER_USER_SUCCESSFUL:\r\n            state = {\r\n                ...state,\r\n                loading: false,\r\n                user: action.payload,\r\n                registrationError: null\r\n            }\r\n            break;\r\n        case REGISTER_USER_FAILED:\r\n            state = {\r\n                ...state,\r\n                user: null,\r\n                loading: false,\r\n                registrationError: action.payload\r\n            }\r\n            break;\r\n        default:\r\n            state = { ...state };\r\n            break;\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default account;"]},"metadata":{},"sourceType":"module"}